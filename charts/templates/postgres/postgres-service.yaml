apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: {{ .Values.namespace | quote }}
  labels:
    app: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgres.image | quote }}
          imagePullPolicy: {{ .Values.postgres.imagePullPolicy }}
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretName | default (printf "%s-postgres-credentials" .Release.Name) | quote }}
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretName | default (printf "%s-postgres-credentials" .Release.Name) | quote }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretName | default (printf "%s-postgres-credentials" .Release.Name) | quote }}
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command:
                - "pg_isready"
                - "-U"
                - "{{ .Values.postgres.user | default "attendee_development_user" }}"
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            exec:
              command:
                - "pg_isready"
                - "-U"
                - "{{ .Values.postgres.user | default "attendee_development_user" }}"
            initialDelaySeconds: 30
            periodSeconds: 20
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.postgres.persistence.size }}
        {{- with .Values.postgres.persistence.storageClassName }}
        storageClassName: {{ . | quote }}
        {{- end }}